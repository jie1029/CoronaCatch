{"remainingRequest":"/Users/taese0ng/Desktop/test/front/node_modules/babel-loader/lib/index.js!/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue","mtime":1584534781680},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZURhdW1NYXAgZnJvbSAidnVlLWRhdW0tbWFwIjsKdmFyIG1hcmtlciA9IFtdOwp2YXIgbWssIGljb247CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBWdWVEYXVtTWFwOiBWdWVEYXVtTWFwCiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBpZiAoImdlb2xvY2F0aW9uIiBpbiBuYXZpZ2F0b3IpIHsKICAgICAgY29uc29sZS5sb2coIuyCrOyaqeqwgOuKpSEiKTsKICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihmdW5jdGlvbiAocG9zKSB7CiAgICAgICAgX3RoaXMuY2VudGVyLmxhdCA9IHBvcy5jb29yZHMubGF0aXR1ZGU7CiAgICAgICAgX3RoaXMuVXNlcmxvY1Bvc2l0aW9uLmxhdCA9IHBvcy5jb29yZHMubGF0aXR1ZGU7CiAgICAgICAgX3RoaXMuY2VudGVyLmxuZyA9IHBvcy5jb29yZHMubG9uZ2l0dWRlOwogICAgICAgIF90aGlzLlVzZXJsb2NQb3NpdGlvbi5sbmcgPSBwb3MuY29vcmRzLmxvbmdpdHVkZTsKCiAgICAgICAgX3RoaXMuJHNvY2tldC5lbWl0KCJzZXRMb2NhdGlvbiIsIF90aGlzLmNlbnRlcik7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSk7CiAgICAgIH0pOwogICAgfQoKICAgIHZhciBpID0gMTsKICAgIHRoaXMuJHNvY2tldC5lbWl0KCJzZXRMb2NhdGlvbiIsIHRoaXMuY2VudGVyKTsKICAgIHRoaXMuJHNvY2tldC5vbigic2V0TG9jYXRpb24iLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICBfdGhpcy5tYXNrID0gZGF0YS5kYXRhLnN0b3JlczsgLy8gY29uc29sZS5sb2coIm1hc2siLCB0aGlzLm1hc2spOwoKICAgICAgaWYgKGkgPT0gMSkgewogICAgICAgIGkgPSAwOwoKICAgICAgICBfdGhpcy5kcmF3TWFya2VyKCk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvbGRNc2c6ICLsoJHquLAiLAogICAgICBmb2xkSW5mbzogdHJ1ZSwKICAgICAgVXNlcmxvY1Bvc2l0aW9uOiB7CiAgICAgICAgbGF0OiAzMy40NTA3MDEsCiAgICAgICAgbG5nOiAxMjYuNTcwNjY3CiAgICAgIH0sCiAgICAgIG1hc2s6ICIiLAogICAgICBhcHBLZXk6ICI0ZmFlN2Y3ZGNkMzkwOGM5YzJhZTFmODJmZDM2NDhjZiIsCiAgICAgIGNlbnRlcjogewogICAgICAgIGxhdDogMzMuNDUwNzAxLAogICAgICAgIGxuZzogMTI2LjU3MDY2NwogICAgICB9LAogICAgICAvLyDsp4Drj4TsnZgg7KSR7IusIOyijO2RnAogICAgICBsZXZlbDogMywKICAgICAgLy8g7KeA64+E7J2YIOugiOuyqCjtmZXrjIAsIOy2leyGjCDsoJXrj4QpLAogICAgICBtYXBUeXBlSWQ6IFZ1ZURhdW1NYXAuTWFwVHlwZUlkLk5PUk1BTCwKICAgICAgLy8g66e1IO2DgOyehQogICAgICBsaWJyYXJpZXM6IFtdLAogICAgICAvLyDstpTqsIDroZwg67aI65+s7JisIOudvOydtOu4jOufrOumrAogICAgICBtYXA6IG51bGwgLy8g7KeA64+EIOqwneyytC4g7KeA64+E6rCAIOuhnOuTnOuQmOuptCDtlaDri7nrkKguCgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOyngOuPhOqwgCDroZzrk5wg7JmE66OM65CY66m0IGxvYWQg7J2067Kk7Yq4IOuwnOyDnQogICAgb25Mb2FkOiBmdW5jdGlvbiBvbkxvYWQobWFwKSB7CiAgICAgIHRoaXMubWFwID0gbWFwOwogICAgICB0aGlzLm1hcC5zZXRNaW5MZXZlbCgyKTsKICAgICAgdGhpcy5tYXAuc2V0TWF4TGV2ZWwoNSk7CiAgICAgIHRoaXMuY3JlYXRlTWFya2VyKCk7CiAgICB9LAogICAgY2xlYXJNYXJrZXI6IGZ1bmN0aW9uIGNsZWFyTWFya2VyKCkgewogICAgICBtYXJrZXIubGVuZ3RoID0gMDsKICAgIH0sCiAgICBkcmF3TWFya2VyOiBmdW5jdGlvbiBkcmF3TWFya2VyKCkgewogICAgICB2YXIgaW1hZ2VVUkw7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubWFzay5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICh0aGlzLm1hc2tbaV0ucmVtYWluX3N0YXQgPT0gImVtcHR5IikgewogICAgICAgICAgaW1hZ2VVUkwgPSByZXF1aXJlKCIuLi9hc3NldHMvaW1nL21hc2swLnBuZyIpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5tYXNrW2ldLnJlbWFpbl9zdGF0ID09IG51bGwpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMC5wbmciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSAiYnJlYWsiKSB7CiAgICAgICAgICBpbWFnZVVSTCA9IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWcvbWFzazAucG5nIik7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLm1hc2tbaV0ucmVtYWluX3N0YXQgPT0gImZldyIpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMS5wbmciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSAic29tZSIpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMi5wbmciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSAicGxlbnR5IikgewogICAgICAgICAgaW1hZ2VVUkwgPSByZXF1aXJlKCIuLi9hc3NldHMvaW1nL21hc2szLnBuZyIpOwogICAgICAgIH0KCiAgICAgICAgaWNvbiA9IG5ldyBrYWthby5tYXBzLk1hcmtlckltYWdlKGltYWdlVVJMLCBuZXcga2FrYW8ubWFwcy5TaXplKDMxLCAzNSksIHsKICAgICAgICAgIG9mZnNldDogbmV3IGtha2FvLm1hcHMuUG9pbnQoMTYsIDM0KSwKICAgICAgICAgIGFsdDogIuuniOy7pCIsCiAgICAgICAgICBzaGFwZTogInBvbHkiLAogICAgICAgICAgY29vcmRzOiAiMSwyMCwxLDksNSwyLDEwLDAsMjEsMCwyNywzLDMwLDksMzAsMjAsMTcsMzMsMTQsMzMiCiAgICAgICAgfSk7CiAgICAgICAgbWsgPSBuZXcga2FrYW8ubWFwcy5NYXJrZXIoewogICAgICAgICAgbWFwOiB0aGlzLm1hcCwKICAgICAgICAgIGltYWdlOiBpY29uLAogICAgICAgICAgcG9zaXRpb246IG5ldyBrYWthby5tYXBzLkxhdExuZyh0aGlzLm1hc2tbaV0ubGF0LCB0aGlzLm1hc2tbaV0ubG5nKQogICAgICAgIH0pOwogICAgICAgIG1hcmtlci5wdXNoKG1rKTsKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZU1hcmtlcjogZnVuY3Rpb24gY3JlYXRlTWFya2VyKCkgewogICAgICB0aGlzLiRzb2NrZXQuZW1pdCgic2V0TG9jYXRpb24iLCB0aGlzLmNlbnRlcik7CiAgICAgIHRoaXMuY2xlYXJNYXJrZXIoKTsKICAgICAgdGhpcy5kcmF3TWFya2VyKCk7CiAgICB9LAogICAgbXlMb2NhdGlvbjogZnVuY3Rpb24gbXlMb2NhdGlvbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAoImdlb2xvY2F0aW9uIiBpbiBuYXZpZ2F0b3IpIHsKICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGZ1bmN0aW9uIChwb3MpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKHBvcy5jb29yZHMpOwogICAgICAgICAgX3RoaXMyLmNlbnRlci5sYXQgPSBwb3MuY29vcmRzLmxhdGl0dWRlOwogICAgICAgICAgX3RoaXMyLmNlbnRlci5sbmcgPSBwb3MuY29vcmRzLmxvbmdpdHVkZTsKICAgICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBmb2xkOiBmdW5jdGlvbiBmb2xkKCkgewogICAgICBpZiAodGhpcy5mb2xkSW5mbyA9PSB0cnVlKSB7CiAgICAgICAgdGhpcy5mb2xkTXNnID0gIu2OvOy5mOq4sCI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5mb2xkTXNnID0gIuygkeq4sCI7CiAgICAgIH0KCiAgICAgIHRoaXMuZm9sZEluZm8gPSAhdGhpcy5mb2xkSW5mbzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["MaskMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\"\n      >\n        <md-card>\n          <md-card-header data-background-color=\"green\">\n            <h4 class=\"title\">국내 마스크 현황 지도</h4>\n            <p class=\"category\">\n              전국 약국 공공마스크 실시간 현황 # 5~10분 간격으로 차이가 있을 수\n              있음. #\n            </p>\n          </md-card-header>\n          <md-card-content>\n            <span id=\"myLocation\" @click=\"myLocation\"\n              ><md-icon>my_location</md-icon>현재위치로 가기</span\n            >\n            <div id=\"markerInfo\">\n              <p style=\"text-align: right\">\n                <span @click=\"fold\" style=\"cursor: pointer\">{{ foldMsg }}</span>\n              </p>\n              <span v-if=\"foldInfo\">\n                <img class=\"maskImg\" src=\"../assets/img/mask0.png\" /> 0 or\n                1개<br />\n                <img class=\"maskImg\" src=\"../assets/img/mask1.png\" /> 2 ~\n                30개<br />\n                <img class=\"maskImg\" src=\"../assets/img/mask2.png\" /> 30 or\n                100개<br />\n                <img class=\"maskImg\" src=\"../assets/img/mask3.png\" /> 1000개\n                이상<br />\n              </span>\n            </div>\n            <vue-daum-map\n              :appKey=\"appKey\"\n              :center.sync=\"center\"\n              :level.sync=\"level\"\n              :mapTypeId=\"mapTypeId\"\n              :libraries=\"libraries\"\n              @load=\"onLoad\"\n              @dragend=\"createMarker\"\n              style=\"width:100%;height:550px;\"\n            />\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueDaumMap from \"vue-daum-map\";\n\nvar marker = [];\nvar mk, icon;\nexport default {\n  components: {\n    VueDaumMap\n  },\n  created() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"사용가능!\");\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          this.center.lat = pos.coords.latitude;\n          this.UserlocPosition.lat = pos.coords.latitude;\n          this.center.lng = pos.coords.longitude;\n          this.UserlocPosition.lng = pos.coords.longitude;\n          this.$socket.emit(\"setLocation\", this.center);\n        },\n        err => {\n          console.log(err.message);\n        }\n      );\n    }\n    var i = 1;\n    this.$socket.emit(\"setLocation\", this.center);\n    this.$socket.on(\"setLocation\", data => {\n      this.mask = data.data.stores;\n      // console.log(\"mask\", this.mask);\n      if (i == 1) {\n        i = 0;\n        this.drawMarker();\n      }\n    });\n  },\n  data() {\n    return {\n      foldMsg: \"접기\",\n      foldInfo: true,\n      UserlocPosition: { lat: 33.450701, lng: 126.570667 },\n      mask: \"\",\n      appKey: \"4fae7f7dcd3908c9c2ae1f82fd3648cf\",\n      center: { lat: 33.450701, lng: 126.570667 }, // 지도의 중심 좌표\n      level: 3, // 지도의 레벨(확대, 축소 정도),\n      mapTypeId: VueDaumMap.MapTypeId.NORMAL, // 맵 타입\n      libraries: [], // 추가로 불러올 라이브러리\n      map: null // 지도 객체. 지도가 로드되면 할당됨.\n    };\n  },\n  methods: {\n    // 지도가 로드 완료되면 load 이벤트 발생\n    onLoad(map) {\n      this.map = map;\n      this.map.setMinLevel(2);\n      this.map.setMaxLevel(5);\n      this.createMarker();\n    },\n    clearMarker() {\n      marker.length = 0;\n    },\n    drawMarker() {\n      var imageURL;\n      for (var i = 0; i < this.mask.length; i++) {\n        if (this.mask[i].remain_stat == \"empty\") {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == null) {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == \"break\") {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == \"few\") {\n          imageURL = require(\"../assets/img/mask1.png\");\n        } else if (this.mask[i].remain_stat == \"some\") {\n          imageURL = require(\"../assets/img/mask2.png\");\n        } else if (this.mask[i].remain_stat == \"plenty\") {\n          imageURL = require(\"../assets/img/mask3.png\");\n        }\n        icon = new kakao.maps.MarkerImage(\n          imageURL,\n          new kakao.maps.Size(31, 35),\n          {\n            offset: new kakao.maps.Point(16, 34),\n            alt: \"마커\",\n            shape: \"poly\",\n            coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n          }\n        );\n        mk = new kakao.maps.Marker({\n          map: this.map,\n          image: icon,\n          position: new kakao.maps.LatLng(this.mask[i].lat, this.mask[i].lng)\n        });\n        marker.push(mk);\n      }\n    },\n    createMarker() {\n      this.$socket.emit(\"setLocation\", this.center);\n      this.clearMarker();\n      this.drawMarker();\n    },\n    myLocation() {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          pos => {\n            console.log(pos.coords);\n            this.center.lat = pos.coords.latitude;\n            this.center.lng = pos.coords.longitude;\n          },\n          err => {\n            console.log(err.message);\n          }\n        );\n      }\n    },\n    fold() {\n      if (this.foldInfo == true) {\n        this.foldMsg = \"펼치기\";\n      } else {\n        this.foldMsg = \"접기\";\n      }\n      this.foldInfo = !this.foldInfo;\n    }\n  }\n};\n</script>\n\n<style scoped>\n#myLocation {\n  position: absolute;\n  cursor: pointer;\n  font-weight: bold;\n  margin: 20px;\n  float: left;\n  z-index: 100;\n}\n#markerInfo {\n  background-color: rgba(221, 221, 221, 0.548);\n  position: absolute;\n  font-weight: bold;\n  right: 20px;\n  z-index: 100;\n}\n.maskImg {\n  width: 45px;\n}\n</style>\n"],"sourceRoot":"src/pages"}]}