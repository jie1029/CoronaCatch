{"remainingRequest":"/Users/taese0ng/Desktop/test/front/node_modules/babel-loader/lib/index.js!/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue","mtime":1584444269890},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3RhZXNlMG5nL0Rlc2t0b3AvdGVzdC9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBWdWVEYXVtTWFwIGZyb20gInZ1ZS1kYXVtLW1hcCI7CmltcG9ydCB7IG1hcEdldHRlciwgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwp2YXIgbWFya2VyID0gW107CnZhciBtaywgaWNvbjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZURhdW1NYXA6IFZ1ZURhdW1NYXAKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsiZ2V0R2VvTG9jYXRpb24iXSkpLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBpID0gMTsgLy8gdGhpcy5jZW50ZXIubGF0ID0gdGhpcy5nZXRHZW9Mb2NhdGlvbi5sYXQ7CiAgICAvLyB0aGlzLmNlbnRlci5sbmcgPSB0aGlzLmdldEdlb0xvY2F0aW9uLmxvbjsKCiAgICB0aGlzLiRzb2NrZXQuZW1pdCgic2V0TG9jYXRpb24iLCB0aGlzLmNlbnRlcik7CiAgICB0aGlzLiRzb2NrZXQub24oInNldExvY2F0aW9uIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgX3RoaXMubWFzayA9IGRhdGEuZGF0YS5zdG9yZXM7IC8vIGNvbnNvbGUubG9nKCJtYXNrIiwgdGhpcy5tYXNrKTsKCiAgICAgIGlmIChpID09IDEpIHsKICAgICAgICBpID0gMDsKCiAgICAgICAgX3RoaXMuZHJhd01hcmtlcigpOwogICAgICB9CiAgICB9KTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtYXNrOiAiIiwKICAgICAgYXBwS2V5OiAiNGZhZTdmN2RjZDM5MDhjOWMyYWUxZjgyZmQzNjQ4Y2YiLAogICAgICBjZW50ZXI6IHsKICAgICAgICBsYXQ6IDMzLjQ1MDcwMSwKICAgICAgICBsbmc6IDEyNi41NzA2NjcKICAgICAgfSwKICAgICAgLy8g7KeA64+E7J2YIOykkeyLrCDsooztkZwKICAgICAgbGV2ZWw6IDMsCiAgICAgIC8vIOyngOuPhOydmCDroIjrsqgo7ZmV64yALCDstpXshowg7KCV64+EKSwKICAgICAgbWFwVHlwZUlkOiBWdWVEYXVtTWFwLk1hcFR5cGVJZC5OT1JNQUwsCiAgICAgIC8vIOuntSDtg4DsnoUKICAgICAgbGlicmFyaWVzOiBbXSwKICAgICAgLy8g7LaU6rCA66GcIOu2iOufrOyYrCDrnbzsnbTruIzrn6zrpqwKICAgICAgbWFwOiBudWxsIC8vIOyngOuPhCDqsJ3ssrQuIOyngOuPhOqwgCDroZzrk5zrkJjrqbQg7ZWg64u565CoLgoKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDsp4Drj4TqsIAg66Gc65OcIOyZhOujjOuQmOuptCBsb2FkIOydtOuypO2KuCDrsJzsg50KICAgIG9uTG9hZDogZnVuY3Rpb24gb25Mb2FkKG1hcCkgewogICAgICB0aGlzLm1hcCA9IG1hcDsKICAgICAgdGhpcy5tYXAuc2V0TWluTGV2ZWwoMik7CiAgICAgIHRoaXMubWFwLnNldE1heExldmVsKDMpOwogICAgICB0aGlzLmNyZWF0ZU1hcmtlcigpOwogICAgfSwKICAgIGNsZWFyTWFya2VyOiBmdW5jdGlvbiBjbGVhck1hcmtlcigpIHsKICAgICAgbWFya2VyLmxlbmd0aCA9IDA7CiAgICB9LAogICAgZHJhd01hcmtlcjogZnVuY3Rpb24gZHJhd01hcmtlcigpIHsKICAgICAgdmFyIGltYWdlVVJMOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm1hc2subGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5tYXNrW2ldLnJlbWFpbl9zdGF0ID09ICJlbXB0eSIpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMC5wbmciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSAiZmV3IikgewogICAgICAgICAgaW1hZ2VVUkwgPSByZXF1aXJlKCIuLi9hc3NldHMvaW1nL21hc2sxLnBuZyIpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5tYXNrW2ldLnJlbWFpbl9zdGF0ID09ICJzb21lIikgewogICAgICAgICAgaW1hZ2VVUkwgPSByZXF1aXJlKCIuLi9hc3NldHMvaW1nL21hc2syLnBuZyIpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5tYXNrW2ldLnJlbWFpbl9zdGF0ID09ICJwbGVudHkiKSB7CiAgICAgICAgICBpbWFnZVVSTCA9IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWcvbWFzazMucG5nIik7CiAgICAgICAgfQoKICAgICAgICBpY29uID0gdGhpcy5tYXAuTWFya2VySW1hZ2UoaW1hZ2VVUkwsIG5ldyBrYWthby5tYXBzLlNpemUoMzEsIDM1KSwgewogICAgICAgICAgb2Zmc2V0OiBuZXcga2FrYW8ubWFwcy5Qb2ludCgxNiwgMzQpLAogICAgICAgICAgYWx0OiAi66eI7LukIOydtOuvuOyngCDsmIjsoJwiLAogICAgICAgICAgc2hhcGU6ICJwb2x5IiwKICAgICAgICAgIGNvb3JkczogIjEsMjAsMSw5LDUsMiwxMCwwLDIxLDAsMjcsMywzMCw5LDMwLDIwLDE3LDMzLDE0LDMzIgogICAgICAgIH0pOwogICAgICAgIG1rID0gbmV3IGtha2FvLm1hcHMuTWFya2VyKHsKICAgICAgICAgIG1hcDogdGhpcy5tYXAsCiAgICAgICAgICBpbWFnZTogaWNvbiwKICAgICAgICAgIHBvc2l0aW9uOiBuZXcga2FrYW8ubWFwcy5MYXRMbmcodGhpcy5tYXNrW2ldLmxhdCwgdGhpcy5tYXNrW2ldLmxuZykKICAgICAgICB9KTsKICAgICAgICBtYXJrZXIucHVzaChtayk7CiAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVNYXJrZXI6IGZ1bmN0aW9uIGNyZWF0ZU1hcmtlcigpIHsKICAgICAgdGhpcy4kc29ja2V0LmVtaXQoInNldExvY2F0aW9uIiwgdGhpcy5jZW50ZXIpOwogICAgICB0aGlzLmNsZWFyTWFya2VyKCk7CiAgICAgIGNvbnNvbGUubG9nKG1hcmtlci5sZW5ndGgpOwogICAgICB0aGlzLmRyYXdNYXJrZXIoKTsKICAgICAgY29uc29sZS5sb2cobWFya2VyLmxlbmd0aCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["MaskMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\"\n      >\n        <md-card>\n          <md-card-header data-background-color=\"green\">\n            <h4 class=\"title\">국내 마스크 현황 지도</h4>\n            <p class=\"category\">전국 약국 공공마스크 실시간 현황</p>\n          </md-card-header>\n          <md-card-content>\n            <vue-daum-map\n              :appKey=\"appKey\"\n              :center.sync=\"center\"\n              :level.sync=\"level\"\n              :mapTypeId=\"mapTypeId\"\n              :libraries=\"libraries\"\n              @load=\"onLoad\"\n              @dragend=\"createMarker\"\n              style=\"width:100%;height:500px;\"\n            />\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueDaumMap from \"vue-daum-map\";\nimport { mapGetter, mapGetters } from \"vuex\";\nvar marker = [];\nvar mk, icon;\nexport default {\n  components: {\n    VueDaumMap\n  },\n  computed: {\n    ...mapGetters([\"getGeoLocation\"])\n  },\n  created() {\n    var i = 1;\n    // this.center.lat = this.getGeoLocation.lat;\n    // this.center.lng = this.getGeoLocation.lon;\n    this.$socket.emit(\"setLocation\", this.center);\n    this.$socket.on(\"setLocation\", data => {\n      this.mask = data.data.stores;\n      // console.log(\"mask\", this.mask);\n      if (i == 1) {\n        i = 0;\n        this.drawMarker();\n      }\n    });\n  },\n  data() {\n    return {\n      mask: \"\",\n      appKey: \"4fae7f7dcd3908c9c2ae1f82fd3648cf\",\n      center: { lat: 33.450701, lng: 126.570667 }, // 지도의 중심 좌표\n      level: 3, // 지도의 레벨(확대, 축소 정도),\n      mapTypeId: VueDaumMap.MapTypeId.NORMAL, // 맵 타입\n      libraries: [], // 추가로 불러올 라이브러리\n      map: null // 지도 객체. 지도가 로드되면 할당됨.\n    };\n  },\n  methods: {\n    // 지도가 로드 완료되면 load 이벤트 발생\n    onLoad(map) {\n      this.map = map;\n      this.map.setMinLevel(2);\n      this.map.setMaxLevel(3);\n      this.createMarker();\n    },\n    clearMarker() {\n      marker.length = 0;\n    },\n    drawMarker() {\n      var imageURL;\n      for (var i = 0; i < this.mask.length; i++) {\n        if (this.mask[i].remain_stat == \"empty\") {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == \"few\") {\n          imageURL = require(\"../assets/img/mask1.png\");\n        } else if (this.mask[i].remain_stat == \"some\") {\n          imageURL = require(\"../assets/img/mask2.png\");\n        } else if (this.mask[i].remain_stat == \"plenty\") {\n          imageURL = require(\"../assets/img/mask3.png\");\n        }\n        icon = this.map.MarkerImage(\n          imageURL,\n          new kakao.maps.Size(31, 35),\n          {\n            offset: new kakao.maps.Point(16, 34),\n            alt: \"마커 이미지 예제\",\n            shape: \"poly\",\n            coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n          }\n        );\n        mk = new kakao.maps.Marker({\n          map: this.map,\n          image: icon,\n          position: new kakao.maps.LatLng(this.mask[i].lat, this.mask[i].lng)\n        });\n        marker.push(mk);\n      }\n    },\n    createMarker() {\n      this.$socket.emit(\"setLocation\", this.center);\n      this.clearMarker();\n      console.log(marker.length);\n      this.drawMarker();\n      console.log(marker.length);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/pages"}]}