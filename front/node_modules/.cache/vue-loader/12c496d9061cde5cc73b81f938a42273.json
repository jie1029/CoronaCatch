{"remainingRequest":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue","mtime":1584444269890},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVEYXVtTWFwIGZyb20gInZ1ZS1kYXVtLW1hcCI7CmltcG9ydCB7IG1hcEdldHRlciwgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwp2YXIgbWFya2VyID0gW107CnZhciBtaywgaWNvbjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZURhdW1NYXAKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsiZ2V0R2VvTG9jYXRpb24iXSkKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB2YXIgaSA9IDE7CiAgICAvLyB0aGlzLmNlbnRlci5sYXQgPSB0aGlzLmdldEdlb0xvY2F0aW9uLmxhdDsKICAgIC8vIHRoaXMuY2VudGVyLmxuZyA9IHRoaXMuZ2V0R2VvTG9jYXRpb24ubG9uOwogICAgdGhpcy4kc29ja2V0LmVtaXQoInNldExvY2F0aW9uIiwgdGhpcy5jZW50ZXIpOwogICAgdGhpcy4kc29ja2V0Lm9uKCJzZXRMb2NhdGlvbiIsIGRhdGEgPT4gewogICAgICB0aGlzLm1hc2sgPSBkYXRhLmRhdGEuc3RvcmVzOwogICAgICAvLyBjb25zb2xlLmxvZygibWFzayIsIHRoaXMubWFzayk7CiAgICAgIGlmIChpID09IDEpIHsKICAgICAgICBpID0gMDsKICAgICAgICB0aGlzLmRyYXdNYXJrZXIoKTsKICAgICAgfQogICAgfSk7CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFzazogIiIsCiAgICAgIGFwcEtleTogIjRmYWU3ZjdkY2QzOTA4YzljMmFlMWY4MmZkMzY0OGNmIiwKICAgICAgY2VudGVyOiB7IGxhdDogMzMuNDUwNzAxLCBsbmc6IDEyNi41NzA2NjcgfSwgLy8g7KeA64+E7J2YIOykkeyLrCDsooztkZwKICAgICAgbGV2ZWw6IDMsIC8vIOyngOuPhOydmCDroIjrsqgo7ZmV64yALCDstpXshowg7KCV64+EKSwKICAgICAgbWFwVHlwZUlkOiBWdWVEYXVtTWFwLk1hcFR5cGVJZC5OT1JNQUwsIC8vIOuntSDtg4DsnoUKICAgICAgbGlicmFyaWVzOiBbXSwgLy8g7LaU6rCA66GcIOu2iOufrOyYrCDrnbzsnbTruIzrn6zrpqwKICAgICAgbWFwOiBudWxsIC8vIOyngOuPhCDqsJ3ssrQuIOyngOuPhOqwgCDroZzrk5zrkJjrqbQg7ZWg64u565CoLgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOyngOuPhOqwgCDroZzrk5wg7JmE66OM65CY66m0IGxvYWQg7J2067Kk7Yq4IOuwnOyDnQogICAgb25Mb2FkKG1hcCkgewogICAgICB0aGlzLm1hcCA9IG1hcDsKICAgICAgdGhpcy5tYXAuc2V0TWluTGV2ZWwoMik7CiAgICAgIHRoaXMubWFwLnNldE1heExldmVsKDMpOwogICAgICB0aGlzLmNyZWF0ZU1hcmtlcigpOwogICAgfSwKICAgIGNsZWFyTWFya2VyKCkgewogICAgICBtYXJrZXIubGVuZ3RoID0gMDsKICAgIH0sCiAgICBkcmF3TWFya2VyKCkgewogICAgICB2YXIgaW1hZ2VVUkw7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5tYXNrLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSAiZW1wdHkiKSB7CiAgICAgICAgICBpbWFnZVVSTCA9IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWcvbWFzazAucG5nIik7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLm1hc2tbaV0ucmVtYWluX3N0YXQgPT0gImZldyIpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMS5wbmciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSAic29tZSIpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMi5wbmciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSAicGxlbnR5IikgewogICAgICAgICAgaW1hZ2VVUkwgPSByZXF1aXJlKCIuLi9hc3NldHMvaW1nL21hc2szLnBuZyIpOwogICAgICAgIH0KICAgICAgICBpY29uID0gdGhpcy5tYXAuTWFya2VySW1hZ2UoCiAgICAgICAgICBpbWFnZVVSTCwKICAgICAgICAgIG5ldyBrYWthby5tYXBzLlNpemUoMzEsIDM1KSwKICAgICAgICAgIHsKICAgICAgICAgICAgb2Zmc2V0OiBuZXcga2FrYW8ubWFwcy5Qb2ludCgxNiwgMzQpLAogICAgICAgICAgICBhbHQ6ICLrp4jsu6Qg7J2066+47KeAIOyYiOygnCIsCiAgICAgICAgICAgIHNoYXBlOiAicG9seSIsCiAgICAgICAgICAgIGNvb3JkczogIjEsMjAsMSw5LDUsMiwxMCwwLDIxLDAsMjcsMywzMCw5LDMwLDIwLDE3LDMzLDE0LDMzIgogICAgICAgICAgfQogICAgICAgICk7CiAgICAgICAgbWsgPSBuZXcga2FrYW8ubWFwcy5NYXJrZXIoewogICAgICAgICAgbWFwOiB0aGlzLm1hcCwKICAgICAgICAgIGltYWdlOiBpY29uLAogICAgICAgICAgcG9zaXRpb246IG5ldyBrYWthby5tYXBzLkxhdExuZyh0aGlzLm1hc2tbaV0ubGF0LCB0aGlzLm1hc2tbaV0ubG5nKQogICAgICAgIH0pOwogICAgICAgIG1hcmtlci5wdXNoKG1rKTsKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZU1hcmtlcigpIHsKICAgICAgdGhpcy4kc29ja2V0LmVtaXQoInNldExvY2F0aW9uIiwgdGhpcy5jZW50ZXIpOwogICAgICB0aGlzLmNsZWFyTWFya2VyKCk7CiAgICAgIGNvbnNvbGUubG9nKG1hcmtlci5sZW5ndGgpOwogICAgICB0aGlzLmRyYXdNYXJrZXIoKTsKICAgICAgY29uc29sZS5sb2cobWFya2VyLmxlbmd0aCk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["MaskMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MaskMap.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\"\n      >\n        <md-card>\n          <md-card-header data-background-color=\"green\">\n            <h4 class=\"title\">국내 마스크 현황 지도</h4>\n            <p class=\"category\">전국 약국 공공마스크 실시간 현황</p>\n          </md-card-header>\n          <md-card-content>\n            <vue-daum-map\n              :appKey=\"appKey\"\n              :center.sync=\"center\"\n              :level.sync=\"level\"\n              :mapTypeId=\"mapTypeId\"\n              :libraries=\"libraries\"\n              @load=\"onLoad\"\n              @dragend=\"createMarker\"\n              style=\"width:100%;height:500px;\"\n            />\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueDaumMap from \"vue-daum-map\";\nimport { mapGetter, mapGetters } from \"vuex\";\nvar marker = [];\nvar mk, icon;\nexport default {\n  components: {\n    VueDaumMap\n  },\n  computed: {\n    ...mapGetters([\"getGeoLocation\"])\n  },\n  created() {\n    var i = 1;\n    // this.center.lat = this.getGeoLocation.lat;\n    // this.center.lng = this.getGeoLocation.lon;\n    this.$socket.emit(\"setLocation\", this.center);\n    this.$socket.on(\"setLocation\", data => {\n      this.mask = data.data.stores;\n      // console.log(\"mask\", this.mask);\n      if (i == 1) {\n        i = 0;\n        this.drawMarker();\n      }\n    });\n  },\n  data() {\n    return {\n      mask: \"\",\n      appKey: \"4fae7f7dcd3908c9c2ae1f82fd3648cf\",\n      center: { lat: 33.450701, lng: 126.570667 }, // 지도의 중심 좌표\n      level: 3, // 지도의 레벨(확대, 축소 정도),\n      mapTypeId: VueDaumMap.MapTypeId.NORMAL, // 맵 타입\n      libraries: [], // 추가로 불러올 라이브러리\n      map: null // 지도 객체. 지도가 로드되면 할당됨.\n    };\n  },\n  methods: {\n    // 지도가 로드 완료되면 load 이벤트 발생\n    onLoad(map) {\n      this.map = map;\n      this.map.setMinLevel(2);\n      this.map.setMaxLevel(3);\n      this.createMarker();\n    },\n    clearMarker() {\n      marker.length = 0;\n    },\n    drawMarker() {\n      var imageURL;\n      for (var i = 0; i < this.mask.length; i++) {\n        if (this.mask[i].remain_stat == \"empty\") {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == \"few\") {\n          imageURL = require(\"../assets/img/mask1.png\");\n        } else if (this.mask[i].remain_stat == \"some\") {\n          imageURL = require(\"../assets/img/mask2.png\");\n        } else if (this.mask[i].remain_stat == \"plenty\") {\n          imageURL = require(\"../assets/img/mask3.png\");\n        }\n        icon = this.map.MarkerImage(\n          imageURL,\n          new kakao.maps.Size(31, 35),\n          {\n            offset: new kakao.maps.Point(16, 34),\n            alt: \"마커 이미지 예제\",\n            shape: \"poly\",\n            coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n          }\n        );\n        mk = new kakao.maps.Marker({\n          map: this.map,\n          image: icon,\n          position: new kakao.maps.LatLng(this.mask[i].lat, this.mask[i].lng)\n        });\n        marker.push(mk);\n      }\n    },\n    createMarker() {\n      this.$socket.emit(\"setLocation\", this.center);\n      this.clearMarker();\n      console.log(marker.length);\n      this.drawMarker();\n      console.log(marker.length);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}