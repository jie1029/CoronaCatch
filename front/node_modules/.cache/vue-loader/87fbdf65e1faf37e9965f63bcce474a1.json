{"remainingRequest":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/taese0ng/Desktop/test/front/src/pages/test.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/taese0ng/Desktop/test/front/src/pages/test.vue","mtime":1583512918286},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZDMgewogIGJhY2tncm91bmQ6IHdoaXRlOwogIHdpZHRoOiAxMDAlOwogIG1hcmdpbjogMCBhdXRvOwp9CnBhdGggewogIGZpbGw6IHJnYigyMTQsIDIzNiwgMjIwKTsKICBzdHJva2U6IHJnYigyNDAsIDEzNiwgMTE1KTsKfQo="},{"version":3,"sources":["test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"test.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\"\n      >\n        <md-card>\n          <md-card-content>\n            <div class=\"d3\"></div>\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//https://m.blog.naver.com/PostView.nhn?blogId=jhc9639&logNo=221195987416&proxyReferer=https%3A%2F%2Fwww.google.co.jp%2F\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport { mapGetters } from \"vuex\";\nconst koreaMap = require(\"../assets/skorea-provinces-2018-topo-simple.json\");\nconst mapInfo = [\n  {\n    name: \"서울\",\n    lat: \"37.532600\",\n    lon: \"127.024612\"\n  },\n  {\n    name: \"대전\",\n    lat: \"36.3730178\",\n    lon: \"127.2483736\"\n  },\n  {\n    name: \"대구\",\n    lat: \"35.823747\",\n    lon: \"128.564322\"\n  },\n  {\n    name: \"경북\",\n    lat: \"36.457038\",\n    lon: \"128.685900\"\n  },\n  {\n    name: \"경기\",\n    lat: \"37.563175\",\n    lon: \"127.393231\"\n  },\n  {\n    name: \"부산\",\n    lat: \"35.158756\",\n    lon: \"129.055312\"\n  },\n  {\n    name: \"충남\",\n    lat: \"36.604417\",\n    lon: \"126.796437\"\n  },\n  {\n    name: \"경남\",\n    lat: \"35.417874\",\n    lon: \"128.138220\"\n  },\n  {\n    name: \"강원\",\n    lat: \"37.830490\",\n    lon: \"128.228396\"\n  },\n  {\n    name: \"울산\",\n    lat: \"35.545597\",\n    lon: \"129.257273\"\n  },\n  {\n    name: \"충북\",\n    lat: \"36.790215\",\n    lon: \"127.683863\"\n  },\n  {\n    name: \"광주\",\n    lat: \"35.155227\",\n    lon: \"126.830114\"\n  },\n  {\n    name: \"인천\",\n    lat: \"37.451153\",\n    lon: \"126.673609\"\n  },\n  {\n    name: \"전북\",\n    lat: \"35.724055\",\n    lon: \"127.116647\"\n  },\n  {\n    name: \"전남\",\n    lat: \"34.861789\",\n    lon: \"126.942822\"\n  },\n  {\n    name: \"제주\",\n    lat: \"33.462169\",\n    lon: \"126.525105\"\n  },\n  {\n    name: \"세종\",\n    lat: \"36.486367\",\n    lon: \"127.276387\"\n  }\n];\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  },\n  mounted() {\n    this.draw();\n  },\n  methods: {\n    draw() {\n      const koreaMap = require(\"../assets/skorea-provinces-2018-topo-simple.json\");\n      const geojson = topojson.feature(\n        koreaMap,\n        koreaMap.objects.skorea_provinces_2018_geo\n      );\n      const center = d3.geoCentroid(geojson);\n      const width = this.$store.state.mapWidth + 200;\n      const height = width;\n      const svg = d3\n        .select(\".d3\")\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n      const projection = d3\n        .geoMercator()\n        .scale(1)\n        .translate([0, 0]);\n      const path = d3.geoPath().projection(projection);\n      const bounds = path.bounds(geojson);\n      const widthScale = (bounds[1][0] - bounds[0][0]) / width;\n      const heightScale = (bounds[1][1] - bounds[0][1]) / height;\n      const scale = 1 / Math.max(widthScale, heightScale);\n      const xoffset =\n        width / 2 -\n        (scale * (bounds[1][0] + bounds[0][0])) / 2 +\n        this.$store.state.isMobile;\n      const yoffset = height / 2 - (scale * (bounds[1][1] + bounds[0][1])) / 2;\n      const offset = [xoffset, yoffset];\n      projection.scale(scale).translate(offset);\n      const map = svg\n        .append(\"g\")\n        .selectAll(\"path\")\n        .data(geojson.features)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", path);\n      const icons = svg\n        .append(\"g\")\n        .selectAll(\"svg\")\n        .data(mapInfo)\n        .enter()\n        .append(\"svg:image\")\n        .attr(\"width\", 50)\n        .attr(\"height\", 50)\n        .attr(\"x\", d => projection([d.lon, d.lat])[0])\n        .attr(\"y\", d => projection([d.lon, d.lat])[1])\n        .attr(\"opacity\", 1)\n        .attr(\"xlink:href\", require(\"../assets/cycle.svg\"));\n\n      const zoomed = () => {\n        map.attr(\"transform\", d3.event.transform);\n        icons.attr(\"transform\", d3.event.transform);\n      };\n      const zoom = d3\n        .zoom()\n        .scaleExtent([1, 8])\n        .on(\"zoom\", zoomed);\n      //svg.call(zoom);\n    }\n  }\n};\n</script>\n<style>\n.d3 {\n  background: white;\n  width: 100%;\n  margin: 0 auto;\n}\npath {\n  fill: rgb(214, 236, 220);\n  stroke: rgb(240, 136, 115);\n}\n</style>\n"]}]}