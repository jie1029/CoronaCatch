{"remainingRequest":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/taese0ng/Desktop/CoronaCatch/front/src/components/Cards/ChartCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/src/components/Cards/ChartCard.vue","mtime":1589262484457},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/cache-loader/dist/cjs.js","mtime":1589262478121},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/babel-loader/lib/index.js","mtime":1589262478016},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/cache-loader/dist/cjs.js","mtime":1589262478121},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/vue-loader/lib/index.js","mtime":1589262483767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2hhcnQtY2FyZCIsCiAgcHJvcHM6IHsKICAgIGZvb3RlclRleHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgIGhlYWRlclRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIkNoYXJ0IHRpdGxlIgogICAgfSwKICAgIGNoYXJ0VHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJMaW5lIiAvLyBMaW5lIHwgUGllIHwgQmFyCiAgICB9LAogICAgY2hhcnRPcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIGNoYXJ0UmVzcG9uc2l2ZU9wdGlvbnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBjaGFydERhdGE6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGxhYmVsczogW10sCiAgICAgICAgICBzZXJpZXM6IFtdCiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIGRhdGFCYWNrZ3JvdW5kQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGNoYXJ0RGF0YTogewogICAgICBoYW5kbGVyKCkgewogICAgICAgIGNvbnNvbGUubG9nKCJjaGFuZ2UiKTsKICAgICAgICB0aGlzLmluaXRDaGFydCgpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnRJZDogIm5vLWlkIiwKICAgICAgJENoYXJ0aXN0OiBudWxsLAogICAgICBjaGFydDogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKioKICAgICAqIEluaXRpYWxpemVzIHRoZSBjaGFydCBieSBtZXJnaW5nIHRoZSBjaGFydCBvcHRpb25zIHNlbnQgdmlhIHByb3BzIGFuZCB0aGUgZGVmYXVsdCBjaGFydCBvcHRpb25zCiAgICAgKi8KICAgIGluaXRDaGFydCgpIHsKICAgICAgdmFyIGNoYXJ0SWRRdWVyeSA9IGAjJHt0aGlzLmNoYXJ0SWR9YDsKICAgICAgdGhpcy5jaGFydCA9IHRoaXMuJENoYXJ0aXN0W3RoaXMuY2hhcnRUeXBlXSgKICAgICAgICBjaGFydElkUXVlcnksCiAgICAgICAgdGhpcy5jaGFydERhdGEsCiAgICAgICAgdGhpcy5jaGFydE9wdGlvbnMKICAgICAgKTsKICAgICAgdGhpcy4kZW1pdCgiaW5pdGlhbGl6ZWQiLCB0aGlzLmNoYXJ0KTsKICAgICAgLy8gaWYgKHRoaXMuY2hhcnRUeXBlID09PSAiTGluZSIpIHsKICAgICAgLy8gICB0aGlzLmFuaW1hdGVMaW5lQ2hhcnQoKTsKICAgICAgLy8gfQogICAgICAvLyBpZiAodGhpcy5jaGFydFR5cGUgPT09ICJCYXIiKSB7CiAgICAgIC8vICAgdGhpcy5hbmltYXRlQmFyQ2hhcnQoKTsKICAgICAgLy8gfQogICAgfSwKICAgIC8qKioKICAgICAqIEFzc2lnbnMgYSByYW5kb20gaWQgdG8gdGhlIGNoYXJ0CiAgICAgKi8KICAgIHVwZGF0ZUNoYXJ0SWQoKSB7CiAgICAgIHZhciBjdXJyZW50VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLnRvU3RyaW5nKCk7CiAgICAgIHZhciByYW5kb21JbnQgPSB0aGlzLmdldFJhbmRvbUludCgwLCBjdXJyZW50VGltZSk7CiAgICAgIHRoaXMuY2hhcnRJZCA9IGBkaXZfJHtyYW5kb21JbnR9YDsKICAgIH0sCiAgICBnZXRSYW5kb21JbnQobWluLCBtYXgpIHsKICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBtaW47CiAgICB9LAogICAgYW5pbWF0ZUxpbmVDaGFydCgpIHsKICAgICAgbGV0IHNlcSA9IDA7CiAgICAgIGxldCBkdXJhdGlvbnMgPSA1MDA7CiAgICAgIGxldCBkZWxheXMgPSA4MDsKICAgICAgdGhpcy5jaGFydC5vbigiZHJhdyIsIGRhdGEgPT4gewogICAgICAgIGlmIChkYXRhLnR5cGUgPT09ICJsaW5lIiB8fCBkYXRhLnR5cGUgPT09ICJhcmVhIikgewogICAgICAgICAgZGF0YS5lbGVtZW50LmFuaW1hdGUoewogICAgICAgICAgICBkOiB7CiAgICAgICAgICAgICAgYmVnaW46IDYwMCwKICAgICAgICAgICAgICBkdXI6IDcwMCwKICAgICAgICAgICAgICBmcm9tOiBkYXRhLnBhdGgKICAgICAgICAgICAgICAgIC5jbG9uZSgpCiAgICAgICAgICAgICAgICAuc2NhbGUoMSwgMCkKICAgICAgICAgICAgICAgIC50cmFuc2xhdGUoMCwgZGF0YS5jaGFydFJlY3QuaGVpZ2h0KCkpCiAgICAgICAgICAgICAgICAuc3RyaW5naWZ5KCksCiAgICAgICAgICAgICAgdG86IGRhdGEucGF0aC5jbG9uZSgpLnN0cmluZ2lmeSgpLAogICAgICAgICAgICAgIGVhc2luZzogdGhpcy4kQ2hhcnRpc3QuU3ZnLkVhc2luZy5lYXNlT3V0UXVpbnQKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmIChkYXRhLnR5cGUgPT09ICJwb2ludCIpIHsKICAgICAgICAgIHNlcSsrOwogICAgICAgICAgZGF0YS5lbGVtZW50LmFuaW1hdGUoewogICAgICAgICAgICBvcGFjaXR5OiB7CiAgICAgICAgICAgICAgYmVnaW46IHNlcSAqIGRlbGF5cywKICAgICAgICAgICAgICBkdXI6IGR1cmF0aW9ucywKICAgICAgICAgICAgICBmcm9tOiAwLAogICAgICAgICAgICAgIHRvOiAxLAogICAgICAgICAgICAgIGVhc2luZzogImVhc2UiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHNlcSA9IDA7CiAgICB9LAogICAgYW5pbWF0ZUJhckNoYXJ0KCkgewogICAgICBsZXQgc2VxID0gMDsKICAgICAgbGV0IGR1cmF0aW9ucyA9IDUwMDsKICAgICAgbGV0IGRlbGF5cyA9IDgwOwogICAgICB0aGlzLmNoYXJ0Lm9uKCJkcmF3IiwgZGF0YSA9PiB7CiAgICAgICAgaWYgKGRhdGEudHlwZSA9PT0gImJhciIpIHsKICAgICAgICAgIHNlcSsrOwogICAgICAgICAgZGF0YS5lbGVtZW50LmFuaW1hdGUoewogICAgICAgICAgICBvcGFjaXR5OiB7CiAgICAgICAgICAgICAgYmVnaW46IHNlcSAqIGRlbGF5cywKICAgICAgICAgICAgICBkdXI6IGR1cmF0aW9ucywKICAgICAgICAgICAgICBmcm9tOiAwLAogICAgICAgICAgICAgIHRvOiAxLAogICAgICAgICAgICAgIGVhc2luZzogImVhc2UiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy51cGRhdGVDaGFydElkKCk7CiAgICB0aGlzLiRuZXh0VGljayh0aGlzLmluaXRDaGFydCk7CiAgfQp9Owo="},{"version":3,"sources":["ChartCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"ChartCard.vue","sourceRoot":"src/components/Cards","sourcesContent":["<template>\n  <md-card>\n    <md-card-header\n      class=\"card-chart\"\n      :data-background-color=\"dataBackgroundColor\"\n    >\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\n    </md-card-header>\n\n    <md-card-content>\n      <slot name=\"content\"></slot>\n    </md-card-content>\n\n    <md-card-actions md-alignment=\"left\">\n      <slot name=\"footer\"></slot>\n    </md-card-actions>\n  </md-card>\n</template>\n<script>\nexport default {\n  name: \"chart-card\",\n  props: {\n    footerText: {\n      type: String,\n      default: \"\"\n    },\n    headerTitle: {\n      type: String,\n      default: \"Chart title\"\n    },\n    chartType: {\n      type: String,\n      default: \"Line\" // Line | Pie | Bar\n    },\n    chartOptions: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    chartResponsiveOptions: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    chartData: {\n      type: Object,\n      default: () => {\n        return {\n          labels: [],\n          series: []\n        };\n      }\n    },\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    chartData: {\n      handler() {\n        console.log(\"change\");\n        this.initChart();\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n      chartId: \"no-id\",\n      $Chartist: null,\n      chart: null\n    };\n  },\n  methods: {\n    /***\n     * Initializes the chart by merging the chart options sent via props and the default chart options\n     */\n    initChart() {\n      var chartIdQuery = `#${this.chartId}`;\n      this.chart = this.$Chartist[this.chartType](\n        chartIdQuery,\n        this.chartData,\n        this.chartOptions\n      );\n      this.$emit(\"initialized\", this.chart);\n      // if (this.chartType === \"Line\") {\n      //   this.animateLineChart();\n      // }\n      // if (this.chartType === \"Bar\") {\n      //   this.animateBarChart();\n      // }\n    },\n    /***\n     * Assigns a random id to the chart\n     */\n    updateChartId() {\n      var currentTime = new Date().getTime().toString();\n      var randomInt = this.getRandomInt(0, currentTime);\n      this.chartId = `div_${randomInt}`;\n    },\n    getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    animateLineChart() {\n      let seq = 0;\n      let durations = 500;\n      let delays = 80;\n      this.chart.on(\"draw\", data => {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path\n                .clone()\n                .scale(1, 0)\n                .translate(0, data.chartRect.height())\n                .stringify(),\n              to: data.path.clone().stringify(),\n              easing: this.$Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      });\n      seq = 0;\n    },\n    animateBarChart() {\n      let seq = 0;\n      let durations = 500;\n      let delays = 80;\n      this.chart.on(\"draw\", data => {\n        if (data.type === \"bar\") {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.updateChartId();\n    this.$nextTick(this.initChart);\n  }\n};\n</script>\n"]}]}