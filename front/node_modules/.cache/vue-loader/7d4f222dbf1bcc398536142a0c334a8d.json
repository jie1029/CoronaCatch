{"remainingRequest":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/taese0ng/Desktop/CoronaCatch/front/src/pages/MaskMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/src/pages/MaskMap.vue","mtime":1589262484462},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/cache-loader/dist/cjs.js","mtime":1589262478121},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/babel-loader/lib/index.js","mtime":1589262478016},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/cache-loader/dist/cjs.js","mtime":1589262478121},{"path":"/Users/taese0ng/Desktop/CoronaCatch/front/node_modules/vue-loader/lib/index.js","mtime":1589262483767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVEYXVtTWFwIGZyb20gInZ1ZS1kYXVtLW1hcCI7Cgp2YXIgbWFya2VyID0gW107CnZhciBtaywKICBpY29uLAogIG15TWFya2VyID0gbnVsbDsKdmFyIG15X2xvY2F0aW9uID0geyBsYXQ6IDAsIGxuZzogMCB9OwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVnVlRGF1bU1hcAogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy5wbGF5SW50ZXJ2YWwpOwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGlmICgiZ2VvbG9jYXRpb24iIGluIG5hdmlnYXRvcikgewogICAgICBjb25zb2xlLmxvZygi7IKs7Jqp6rCA64qlISIpOwogICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKAogICAgICAgIHBvcyA9PiB7CiAgICAgICAgICB0aGlzLmNlbnRlci5sYXQgPSBwb3MuY29vcmRzLmxhdGl0dWRlOwogICAgICAgICAgdGhpcy5Vc2VybG9jUG9zaXRpb24ubGF0ID0gcG9zLmNvb3Jkcy5sYXRpdHVkZTsKICAgICAgICAgIHRoaXMuY2VudGVyLmxuZyA9IHBvcy5jb29yZHMubG9uZ2l0dWRlOwogICAgICAgICAgdGhpcy5Vc2VybG9jUG9zaXRpb24ubG5nID0gcG9zLmNvb3Jkcy5sb25naXR1ZGU7CiAgICAgICAgICBteV9sb2NhdGlvbi5sYXQgPSBwb3MuY29vcmRzLmxhdGl0dWRlOwogICAgICAgICAgbXlfbG9jYXRpb24ubG5nID0gcG9zLmNvb3Jkcy5sb25naXR1ZGU7CiAgICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgic2V0TG9jYXRpb24iLCB0aGlzLmNlbnRlcik7CiAgICAgICAgfSwKICAgICAgICBlcnIgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyLm1lc3NhZ2UpOwogICAgICAgIH0KICAgICAgKTsKICAgIH0KICAgIHZhciBpID0gMTsKICAgIHRoaXMuJHNvY2tldC5lbWl0KCJzZXRMb2NhdGlvbiIsIHRoaXMuY2VudGVyKTsKICAgIHRoaXMuJHNvY2tldC5vbigic2V0TG9jYXRpb24iLCBkYXRhID0+IHsKICAgICAgdGhpcy5tYXNrID0gZGF0YS5kYXRhLnN0b3JlczsKICAgICAgLy8gY29uc29sZS5sb2coIm1hc2siLCB0aGlzLm1hc2spOwogICAgICBpZiAoaSA9PSAxKSB7CiAgICAgICAgaSA9IDA7CiAgICAgICAgdGhpcy5kcmF3TWFya2VyKCk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBsYXlJbnRlcnZhbDogbnVsbCwKICAgICAgZm9sZE1zZzogIuygkeq4sCIsCiAgICAgIGZvbGRJbmZvOiB0cnVlLAogICAgICBVc2VybG9jUG9zaXRpb246IHsgbGF0OiAzMy40NTA3MDEsIGxuZzogMTI2LjU3MDY2NyB9LAogICAgICBtYXNrOiAiIiwKICAgICAgYXBwS2V5OiAia2V5IiwKICAgICAgY2VudGVyOiB7IGxhdDogMzMuNDUwNzAxLCBsbmc6IDEyNi41NzA2NjcgfSwgLy8g7KeA64+E7J2YIOykkeyLrCDsooztkZwKICAgICAgbGV2ZWw6IDMsIC8vIOyngOuPhOydmCDroIjrsqgo7ZmV64yALCDstpXshowg7KCV64+EKSwKICAgICAgbWFwVHlwZUlkOiBWdWVEYXVtTWFwLk1hcFR5cGVJZC5OT1JNQUwsIC8vIOuntSDtg4DsnoUKICAgICAgbGlicmFyaWVzOiBbXSwgLy8g7LaU6rCA66GcIOu2iOufrOyYrCDrnbzsnbTruIzrn6zrpqwKICAgICAgbWFwOiBudWxsIC8vIOyngOuPhCDqsJ3ssrQuIOyngOuPhOqwgCDroZzrk5zrkJjrqbQg7ZWg64u565CoLgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOyngOuPhOqwgCDroZzrk5wg7JmE66OM65CY66m0IGxvYWQg7J2067Kk7Yq4IOuwnOyDnQogICAgb25Mb2FkKG1hcCkgewogICAgICB0aGlzLm1hcCA9IG1hcDsKICAgICAgdGhpcy5teUxvY2F0aW9uKCk7CiAgICAgIHRoaXMubWFwLnNldE1pbkxldmVsKDIpOwogICAgICB0aGlzLm1hcC5zZXRNYXhMZXZlbCg1KTsKICAgICAgdGhpcy5jcmVhdGVNYXJrZXIoKTsKICAgICAgdGhpcy5wbGF5TG9jYXRpb24oKTsKICAgIH0sCiAgICBjbGVhck1hcmtlcigpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtYXJrZXIubGVuZ3RoOyBpKyspIHsKICAgICAgICBtYXJrZXJbaV0uc2V0TWFwKG51bGwpOwogICAgICB9CiAgICAgIG1hcmtlci5sZW5ndGggPSAwOwogICAgfSwKICAgIGRyYXdNYXJrZXIoKSB7CiAgICAgIHZhciBpbWFnZVVSTDsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm1hc2subGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5tYXNrW2ldLnJlbWFpbl9zdGF0ID09ICJlbXB0eSIpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMC5wbmciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubWFza1tpXS5yZW1haW5fc3RhdCA9PSBudWxsKSB7CiAgICAgICAgICBpbWFnZVVSTCA9IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWcvbWFzazAucG5nIik7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLm1hc2tbaV0ucmVtYWluX3N0YXQgPT0gImJyZWFrIikgewogICAgICAgICAgaW1hZ2VVUkwgPSByZXF1aXJlKCIuLi9hc3NldHMvaW1nL21hc2swLnBuZyIpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5tYXNrW2ldLnJlbWFpbl9zdGF0ID09ICJmZXciKSB7CiAgICAgICAgICBpbWFnZVVSTCA9IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWcvbWFzazEucG5nIik7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLm1hc2tbaV0ucmVtYWluX3N0YXQgPT0gInNvbWUiKSB7CiAgICAgICAgICBpbWFnZVVSTCA9IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWcvbWFzazIucG5nIik7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLm1hc2tbaV0ucmVtYWluX3N0YXQgPT0gInBsZW50eSIpIHsKICAgICAgICAgIGltYWdlVVJMID0gcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9tYXNrMy5wbmciKTsKICAgICAgICB9CiAgICAgICAgaWNvbiA9IG5ldyBrYWthby5tYXBzLk1hcmtlckltYWdlKAogICAgICAgICAgaW1hZ2VVUkwsCiAgICAgICAgICBuZXcga2FrYW8ubWFwcy5TaXplKDMxLCAzNSksCiAgICAgICAgICB7CiAgICAgICAgICAgIGFsdDogIuuniOy7pCIsCiAgICAgICAgICAgIHNoYXBlOiAicG9seSIsCiAgICAgICAgICAgIGNvb3JkczogIjEsMjAsMSw5LDUsMiwxMCwwLDIxLDAsMjcsMywzMCw5LDMwLDIwLDE3LDMzLDE0LDMzIgogICAgICAgICAgfQogICAgICAgICk7CiAgICAgICAgbWsgPSBuZXcga2FrYW8ubWFwcy5NYXJrZXIoewogICAgICAgICAgbWFwOiB0aGlzLm1hcCwKICAgICAgICAgIGltYWdlOiBpY29uLAogICAgICAgICAgcG9zaXRpb246IG5ldyBrYWthby5tYXBzLkxhdExuZyh0aGlzLm1hc2tbaV0ubGF0LCB0aGlzLm1hc2tbaV0ubG5nKQogICAgICAgIH0pOwogICAgICAgIG1hcmtlci5wdXNoKG1rKTsKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZU1hcmtlcigpIHsKICAgICAgdGhpcy4kc29ja2V0LmVtaXQoInNldExvY2F0aW9uIiwgdGhpcy5jZW50ZXIpOwogICAgICB0aGlzLmNsZWFyTWFya2VyKCk7CiAgICAgIHRoaXMuZHJhd01hcmtlcigpOwogICAgfSwKICAgIGNlbnRlckxvY2F0aW9uKCkgewogICAgICBpZiAoImdlb2xvY2F0aW9uIiBpbiBuYXZpZ2F0b3IpIHsKICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKAogICAgICAgICAgcG9zID0+IHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhwb3MuY29vcmRzKTsKICAgICAgICAgICAgdGhpcy5jZW50ZXIubGF0ID0gcG9zLmNvb3Jkcy5sYXRpdHVkZTsKICAgICAgICAgICAgdGhpcy5jZW50ZXIubG5nID0gcG9zLmNvb3Jkcy5sb25naXR1ZGU7CiAgICAgICAgICB9LAogICAgICAgICAgZXJyID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyLm1lc3NhZ2UpOwogICAgICAgICAgfQogICAgICAgICk7CiAgICAgIH0KICAgICAgdGhpcy5jcmVhdGVNYXJrZXIoKTsKICAgIH0sCiAgICBteUxvY2F0aW9uKCkgewogICAgICBpZiAoImdlb2xvY2F0aW9uIiBpbiBuYXZpZ2F0b3IpIHsKICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKAogICAgICAgICAgcG9zID0+IHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhwb3MuY29vcmRzKTsKICAgICAgICAgICAgbXlfbG9jYXRpb24ubGF0ID0gcG9zLmNvb3Jkcy5sYXRpdHVkZTsKICAgICAgICAgICAgbXlfbG9jYXRpb24ubG5nID0gcG9zLmNvb3Jkcy5sb25naXR1ZGU7CiAgICAgICAgICB9LAogICAgICAgICAgZXJyID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyLm1lc3NhZ2UpOwogICAgICAgICAgfQogICAgICAgICk7CiAgICAgIH0KICAgIH0sCiAgICBwbGF5TG9jYXRpb24oKSB7CiAgICAgIHRoaXMucGxheUludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIHRoaXMubXlMb2NhdGlvbigpOwogICAgICAgIGlmIChteU1hcmtlciAhPSBudWxsKSBteU1hcmtlci5zZXRNYXAobnVsbCk7CiAgICAgICAgaWNvbiA9IG5ldyBrYWthby5tYXBzLk1hcmtlckltYWdlKAogICAgICAgICAgcmVxdWlyZSgiLi4vYXNzZXRzL2ltZy9teU1hcmtlci5wbmciKSwKICAgICAgICAgIG5ldyBrYWthby5tYXBzLlNpemUoMjAsIDIwKSwKICAgICAgICAgIHsKICAgICAgICAgICAgYWx0OiAi66eI7LukIiwKICAgICAgICAgICAgc2hhcGU6ICJwb2x5IiwKICAgICAgICAgICAgY29vcmRzOiAiMSwyMCwxLDksNSwyLDEwLDAsMjEsMCwyNywzLDMwLDksMzAsMjAsMTcsMzMsMTQsMzMiCiAgICAgICAgICB9CiAgICAgICAgKTsKICAgICAgICBteU1hcmtlciA9IG5ldyBrYWthby5tYXBzLk1hcmtlcih7CiAgICAgICAgICBtYXA6IHRoaXMubWFwLAogICAgICAgICAgaW1hZ2U6IGljb24sCiAgICAgICAgICBwb3NpdGlvbjogbmV3IGtha2FvLm1hcHMuTGF0TG5nKG15X2xvY2F0aW9uLmxhdCwgbXlfbG9jYXRpb24ubG5nKQogICAgICAgIH0pOwogICAgICB9LCAxMDAwKTsKICAgIH0sCiAgICBmb2xkKCkgewogICAgICBpZiAodGhpcy5mb2xkSW5mbyA9PSB0cnVlKSB7CiAgICAgICAgdGhpcy5mb2xkTXNnID0gIu2OvOy5mOq4sCI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5mb2xkTXNnID0gIuygkeq4sCI7CiAgICAgIH0KICAgICAgdGhpcy5mb2xkSW5mbyA9ICF0aGlzLmZvbGRJbmZvOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["MaskMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"MaskMap.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\"\n      >\n        <md-card>\n          <md-card-header data-background-color=\"green\">\n            <h4 class=\"title\">국내 마스크 현황 지도</h4>\n            <p class=\"category\">\n              전국 약국 공공마스크 실시간 현황 # 5~10분 간격으로 차이가 있을 수\n              있음. #\n            </p>\n          </md-card-header>\n          <md-card-content>\n            <span id=\"myLocation\" @click=\"centerLocation\"\n              ><md-icon>my_location</md-icon>현재위치로 가기</span\n            >\n            <div id=\"markerInfo\">\n              <p style=\"text-align: right\">\n                <span @click=\"fold\" style=\"cursor: pointer\">{{ foldMsg }}</span>\n              </p>\n              <span v-if=\"foldInfo\">\n                <img class=\"maskImg\" src=\"../assets/img/mask0.png\" /> 0 or\n                1개<br />\n                <img class=\"maskImg\" src=\"../assets/img/mask1.png\" /> 2 ~\n                30개<br />\n                <img class=\"maskImg\" src=\"../assets/img/mask2.png\" /> 30 ~\n                100개<br />\n                <img class=\"maskImg\" src=\"../assets/img/mask3.png\" /> 100개\n                이상<br />\n              </span>\n            </div>\n            <vue-daum-map\n              :appKey=\"appKey\"\n              :center.sync=\"center\"\n              :level.sync=\"level\"\n              :mapTypeId=\"mapTypeId\"\n              :libraries=\"libraries\"\n              @load=\"onLoad\"\n              @tilesloaded=\"createMarker\"\n              style=\"width:100%;height:550px;\"\n            />\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueDaumMap from \"vue-daum-map\";\n\nvar marker = [];\nvar mk,\n  icon,\n  myMarker = null;\nvar my_location = { lat: 0, lng: 0 };\nexport default {\n  components: {\n    VueDaumMap\n  },\n  beforeDestroy() {\n    clearInterval(this.playInterval);\n  },\n  created() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"사용가능!\");\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          this.center.lat = pos.coords.latitude;\n          this.UserlocPosition.lat = pos.coords.latitude;\n          this.center.lng = pos.coords.longitude;\n          this.UserlocPosition.lng = pos.coords.longitude;\n          my_location.lat = pos.coords.latitude;\n          my_location.lng = pos.coords.longitude;\n          this.$socket.emit(\"setLocation\", this.center);\n        },\n        err => {\n          console.log(err.message);\n        }\n      );\n    }\n    var i = 1;\n    this.$socket.emit(\"setLocation\", this.center);\n    this.$socket.on(\"setLocation\", data => {\n      this.mask = data.data.stores;\n      // console.log(\"mask\", this.mask);\n      if (i == 1) {\n        i = 0;\n        this.drawMarker();\n      }\n    });\n  },\n  data() {\n    return {\n      playInterval: null,\n      foldMsg: \"접기\",\n      foldInfo: true,\n      UserlocPosition: { lat: 33.450701, lng: 126.570667 },\n      mask: \"\",\n      appKey: \"key\",\n      center: { lat: 33.450701, lng: 126.570667 }, // 지도의 중심 좌표\n      level: 3, // 지도의 레벨(확대, 축소 정도),\n      mapTypeId: VueDaumMap.MapTypeId.NORMAL, // 맵 타입\n      libraries: [], // 추가로 불러올 라이브러리\n      map: null // 지도 객체. 지도가 로드되면 할당됨.\n    };\n  },\n  methods: {\n    // 지도가 로드 완료되면 load 이벤트 발생\n    onLoad(map) {\n      this.map = map;\n      this.myLocation();\n      this.map.setMinLevel(2);\n      this.map.setMaxLevel(5);\n      this.createMarker();\n      this.playLocation();\n    },\n    clearMarker() {\n      for (var i = 0; i < marker.length; i++) {\n        marker[i].setMap(null);\n      }\n      marker.length = 0;\n    },\n    drawMarker() {\n      var imageURL;\n      for (var i = 0; i < this.mask.length; i++) {\n        if (this.mask[i].remain_stat == \"empty\") {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == null) {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == \"break\") {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == \"few\") {\n          imageURL = require(\"../assets/img/mask1.png\");\n        } else if (this.mask[i].remain_stat == \"some\") {\n          imageURL = require(\"../assets/img/mask2.png\");\n        } else if (this.mask[i].remain_stat == \"plenty\") {\n          imageURL = require(\"../assets/img/mask3.png\");\n        }\n        icon = new kakao.maps.MarkerImage(\n          imageURL,\n          new kakao.maps.Size(31, 35),\n          {\n            alt: \"마커\",\n            shape: \"poly\",\n            coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n          }\n        );\n        mk = new kakao.maps.Marker({\n          map: this.map,\n          image: icon,\n          position: new kakao.maps.LatLng(this.mask[i].lat, this.mask[i].lng)\n        });\n        marker.push(mk);\n      }\n    },\n    createMarker() {\n      this.$socket.emit(\"setLocation\", this.center);\n      this.clearMarker();\n      this.drawMarker();\n    },\n    centerLocation() {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          pos => {\n            //console.log(pos.coords);\n            this.center.lat = pos.coords.latitude;\n            this.center.lng = pos.coords.longitude;\n          },\n          err => {\n            console.log(err.message);\n          }\n        );\n      }\n      this.createMarker();\n    },\n    myLocation() {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          pos => {\n            //console.log(pos.coords);\n            my_location.lat = pos.coords.latitude;\n            my_location.lng = pos.coords.longitude;\n          },\n          err => {\n            console.log(err.message);\n          }\n        );\n      }\n    },\n    playLocation() {\n      this.playInterval = setInterval(() => {\n        this.myLocation();\n        if (myMarker != null) myMarker.setMap(null);\n        icon = new kakao.maps.MarkerImage(\n          require(\"../assets/img/myMarker.png\"),\n          new kakao.maps.Size(20, 20),\n          {\n            alt: \"마커\",\n            shape: \"poly\",\n            coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n          }\n        );\n        myMarker = new kakao.maps.Marker({\n          map: this.map,\n          image: icon,\n          position: new kakao.maps.LatLng(my_location.lat, my_location.lng)\n        });\n      }, 1000);\n    },\n    fold() {\n      if (this.foldInfo == true) {\n        this.foldMsg = \"펼치기\";\n      } else {\n        this.foldMsg = \"접기\";\n      }\n      this.foldInfo = !this.foldInfo;\n    }\n  }\n};\n</script>\n\n<style scoped>\n#myLocation {\n  position: absolute;\n  cursor: pointer;\n  font-weight: bold;\n  margin: 20px;\n  float: left;\n  z-index: 100;\n}\n#markerInfo {\n  background-color: rgba(221, 221, 221, 0.548);\n  position: absolute;\n  font-weight: bold;\n  right: 20px;\n  z-index: 100;\n  padding: 10px;\n}\n.maskImg {\n  width: 45px;\n}\n</style>\n"]}]}