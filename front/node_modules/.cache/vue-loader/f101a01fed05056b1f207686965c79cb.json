{"remainingRequest":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue?vue&type=style&index=0&id=276bbee4&scoped=true&lang=css&","dependencies":[{"path":"/Users/taese0ng/Desktop/test/front/src/pages/MaskMap.vue","mtime":1584454475106},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taese0ng/Desktop/test/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI215TG9jYXRpb24gewogIGZsb2F0OiByaWdodDsKfQo="},{"version":3,"sources":["MaskMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA","file":"MaskMap.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\"\n      >\n        <md-card>\n          <md-card-header data-background-color=\"green\">\n            <h4 class=\"title\">국내 마스크 현황 지도</h4>\n            <p class=\"category\">전국 약국 공공마스크 실시간 현황</p>\n          </md-card-header>\n          <md-card-content>\n            <md-icon id=\"myLocation\">my_location</md-icon>\n            <vue-daum-map\n              :appKey=\"appKey\"\n              :center.sync=\"center\"\n              :level.sync=\"level\"\n              :mapTypeId=\"mapTypeId\"\n              :libraries=\"libraries\"\n              @load=\"onLoad\"\n              @dragend=\"createMarker\"\n              style=\"width:100%;height:500px;\"\n            />\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueDaumMap from \"vue-daum-map\";\nimport { mapGetter, mapGetters } from \"vuex\";\nvar marker = [];\nvar mk, icon, userMarker;\nexport default {\n  components: {\n    VueDaumMap\n  },\n  computed: {\n    ...mapGetters([\"getGeoLocation\"])\n  },\n  created() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"사용가능!\");\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          console.log(pos.coords);\n          //this.setGeoLocation(pos.coords);\n          this.center.lat = pos.coords.latitude;\n          this.UserlocPosition.lat = pos.coords.latitude;\n          this.center.lng = pos.coords.longitude;\n          this.UserlocPosition.lng = pos.coords.longitude;\n        },\n        err => {\n          console.log(err.message);\n        }\n      );\n    }\n    var i = 1;\n    // this.center.lat = this.getGeoLocation.lat;\n    // this.center.lng = this.getGeoLocation.lon;\n    this.$socket.emit(\"setLocation\", this.center);\n    this.$socket.on(\"setLocation\", data => {\n      this.mask = data.data.stores;\n      // console.log(\"mask\", this.mask);\n      if (i == 1) {\n        i = 0;\n        this.drawMarker();\n      }\n    });\n  },\n  data() {\n    return {\n      UserlocPosition: { lat: 33.450701, lng: 126.570667 },\n      mask: \"\",\n      appKey: \"4fae7f7dcd3908c9c2ae1f82fd3648cf\",\n      center: { lat: 33.450701, lng: 126.570667 }, // 지도의 중심 좌표\n      level: 3, // 지도의 레벨(확대, 축소 정도),\n      mapTypeId: VueDaumMap.MapTypeId.NORMAL, // 맵 타입\n      libraries: [], // 추가로 불러올 라이브러리\n      map: null // 지도 객체. 지도가 로드되면 할당됨.\n    };\n  },\n  methods: {\n    // 지도가 로드 완료되면 load 이벤트 발생\n    onLoad(map) {\n      this.map = map;\n      this.map.setMinLevel(2);\n      this.map.setMaxLevel(3);\n      this.createMarker();\n    },\n    drawUserMarker() {\n      userMarker = \"\";\n      userMarker = new kakao.maps.Marker({\n        map: this.map,\n        position: new kakao.maps.LatLng(\n          // this.UserlocPosition.lat,\n          // this.UserlocPosition.lng\n          this.center.lat,\n          this.center.lng\n        )\n      });\n    },\n    clearMarker() {\n      marker.length = 0;\n    },\n    drawMarker() {\n      var imageURL;\n      for (var i = 0; i < this.mask.length; i++) {\n        if (this.mask[i].remain_stat == \"empty\") {\n          imageURL = require(\"../assets/img/mask0.png\");\n        } else if (this.mask[i].remain_stat == \"few\") {\n          imageURL = require(\"../assets/img/mask1.png\");\n        } else if (this.mask[i].remain_stat == \"some\") {\n          imageURL = require(\"../assets/img/mask2.png\");\n        } else if (this.mask[i].remain_stat == \"plenty\") {\n          imageURL = require(\"../assets/img/mask3.png\");\n        }\n        icon = new kakao.maps.MarkerImage(\n          imageURL,\n          new kakao.maps.Size(31, 35),\n          {\n            offset: new kakao.maps.Point(16, 34),\n            alt: \"마커 이미지 예제\",\n            shape: \"poly\",\n            coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n          }\n        );\n        mk = new kakao.maps.Marker({\n          map: this.map,\n          image: icon,\n          position: new kakao.maps.LatLng(this.mask[i].lat, this.mask[i].lng)\n        });\n        marker.push(mk);\n      }\n    },\n    createMarker() {\n      this.$socket.emit(\"setLocation\", this.center);\n      this.clearMarker();\n      console.log(marker.length);\n      this.drawMarker();\n      console.log(marker.length);\n      this.drawUserMarker();\n    }\n  }\n};\n</script>\n\n<style scoped>\n#myLocation {\n  float: right;\n}\n</style>\n"]}]}